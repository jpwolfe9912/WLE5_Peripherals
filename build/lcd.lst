ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"lcd.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.expanderWrite,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	expanderWrite:
  24              	.LVL0:
  25              	.LFB1068:
  26              		.file 1 "Core/Src/lcd.c"
   1:Core/Src/lcd.c **** /** @file 		lcd.c
   2:Core/Src/lcd.c ****  *  @brief
   3:Core/Src/lcd.c ****  *
   4:Core/Src/lcd.c ****  *
   5:Core/Src/lcd.c ****  *  @author 	jeremywolfe
   6:Core/Src/lcd.c ****  *  @date 		Aug 13, 2022
   7:Core/Src/lcd.c ****  */
   8:Core/Src/lcd.c **** #include "lcd.h"
   9:Core/Src/lcd.c **** 
  10:Core/Src/lcd.c **** /* Global Variables */
  11:Core/Src/lcd.c **** uint8_t rowCurr;
  12:Core/Src/lcd.c **** uint8_t colCurr;
  13:Core/Src/lcd.c **** 
  14:Core/Src/lcd.c **** /* Local Variables */
  15:Core/Src/lcd.c **** uint8_t _addr;
  16:Core/Src/lcd.c **** uint8_t _displayfunction;
  17:Core/Src/lcd.c **** uint8_t _displaycontrol;
  18:Core/Src/lcd.c **** uint8_t _displaymode;
  19:Core/Src/lcd.c **** uint8_t _cols = COLS;
  20:Core/Src/lcd.c **** uint8_t _rows = ROWS;
  21:Core/Src/lcd.c **** uint8_t _charsize;
  22:Core/Src/lcd.c **** uint8_t _backlightval;
  23:Core/Src/lcd.c **** 
  24:Core/Src/lcd.c **** /* Function Prototypes */
  25:Core/Src/lcd.c **** static void send(uint8_t, uint8_t);
  26:Core/Src/lcd.c **** static void write4bits(uint8_t);
  27:Core/Src/lcd.c **** static void expanderWrite(uint8_t);
  28:Core/Src/lcd.c **** static void pulseEnable(uint8_t);
  29:Core/Src/lcd.c **** 
  30:Core/Src/lcd.c **** static inline void command(uint8_t value);
  31:Core/Src/lcd.c **** static inline size_t write(uint8_t value);
  32:Core/Src/lcd.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 2


  33:Core/Src/lcd.c **** void lcdInit()
  34:Core/Src/lcd.c **** {
  35:Core/Src/lcd.c ****     _displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
  36:Core/Src/lcd.c **** 
  37:Core/Src/lcd.c ****     if (ROWS > 1)
  38:Core/Src/lcd.c ****     {
  39:Core/Src/lcd.c ****         _displayfunction |= LCD_2LINE;
  40:Core/Src/lcd.c ****     }
  41:Core/Src/lcd.c **** 
  42:Core/Src/lcd.c ****     // SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
  43:Core/Src/lcd.c ****     // according to datasheet, we need at least 40ms after power rises above 2.7V
  44:Core/Src/lcd.c ****     // before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
  45:Core/Src/lcd.c ****     delay(50);
  46:Core/Src/lcd.c **** 
  47:Core/Src/lcd.c ****     // Now we pull both RS and R/W low to begin commands
  48:Core/Src/lcd.c ****     expanderWrite(LCD_BACKLIGHT); // reset expanderand turn backlight off (Bit 8 =1)
  49:Core/Src/lcd.c ****     delay(1000);
  50:Core/Src/lcd.c **** 
  51:Core/Src/lcd.c ****     // put the LCD into 4 bit mode
  52:Core/Src/lcd.c ****     //  this is according to the hitachi HD44780 datasheet
  53:Core/Src/lcd.c ****     //  figure 24, pg 46
  54:Core/Src/lcd.c **** 
  55:Core/Src/lcd.c ****     // we start in 8bit mode, try to set 4 bit mode
  56:Core/Src/lcd.c ****     write4bits(0x03 << 4);
  57:Core/Src/lcd.c ****     delayMicroseconds(4500); // wait min 4.1ms
  58:Core/Src/lcd.c **** 
  59:Core/Src/lcd.c ****     // second try
  60:Core/Src/lcd.c ****     write4bits(0x03 << 4);
  61:Core/Src/lcd.c ****     delayMicroseconds(4500); // wait min 4.1ms
  62:Core/Src/lcd.c **** 
  63:Core/Src/lcd.c ****     // third go!
  64:Core/Src/lcd.c ****     write4bits(0x03 << 4);
  65:Core/Src/lcd.c ****     delayMicroseconds(150);
  66:Core/Src/lcd.c **** 
  67:Core/Src/lcd.c ****     // finally, set to 4-bit interface
  68:Core/Src/lcd.c ****     write4bits(0x02 << 4);
  69:Core/Src/lcd.c **** 
  70:Core/Src/lcd.c ****     // set # lines, font size, etc.
  71:Core/Src/lcd.c ****     command(LCD_FUNCTIONSET | _displayfunction);
  72:Core/Src/lcd.c **** 
  73:Core/Src/lcd.c ****     // turn the display on with no cursor or blinking default
  74:Core/Src/lcd.c ****     _displaycontrol = LCD_DISPLAYON | LCD_CURSORON | LCD_BLINKON;
  75:Core/Src/lcd.c ****     lcdDisplay();
  76:Core/Src/lcd.c **** 
  77:Core/Src/lcd.c ****     // clear it off
  78:Core/Src/lcd.c ****     lcdClear();
  79:Core/Src/lcd.c **** 
  80:Core/Src/lcd.c ****     // Initialize to default text direction (for roman languages)
  81:Core/Src/lcd.c ****     _displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
  82:Core/Src/lcd.c **** 
  83:Core/Src/lcd.c ****     // set the entry mode
  84:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
  85:Core/Src/lcd.c **** 
  86:Core/Src/lcd.c ****     lcdHome();
  87:Core/Src/lcd.c **** 
  88:Core/Src/lcd.c ****     for (int i = 0; i < 3; i++)
  89:Core/Src/lcd.c ****     {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 3


  90:Core/Src/lcd.c ****         lcdBacklight();
  91:Core/Src/lcd.c ****         delay(250);
  92:Core/Src/lcd.c ****         lcdNoBacklight();
  93:Core/Src/lcd.c ****         delay(250);
  94:Core/Src/lcd.c ****     }
  95:Core/Src/lcd.c ****     lcdBacklight(); // finish with backlight on
  96:Core/Src/lcd.c **** 
  97:Core/Src/lcd.c ****     lcdNoAutoscroll();
  98:Core/Src/lcd.c **** 
  99:Core/Src/lcd.c ****     lcdBacklight();
 100:Core/Src/lcd.c **** 
 101:Core/Src/lcd.c ****     rowCurr = 0;
 102:Core/Src/lcd.c ****     colCurr = 0;
 103:Core/Src/lcd.c ****     lcdSetCursor(colCurr, rowCurr);
 104:Core/Src/lcd.c **** }
 105:Core/Src/lcd.c **** 
 106:Core/Src/lcd.c **** /********** high level commands, for the user! */
 107:Core/Src/lcd.c **** void lcdClear()
 108:Core/Src/lcd.c **** {
 109:Core/Src/lcd.c ****     command(LCD_CLEARDISPLAY); // clear display, set cursor position to zero
 110:Core/Src/lcd.c ****     delayMicroseconds(2000);   // this command takes a long time!
 111:Core/Src/lcd.c **** }
 112:Core/Src/lcd.c **** 
 113:Core/Src/lcd.c **** void lcdHome()
 114:Core/Src/lcd.c **** {
 115:Core/Src/lcd.c ****     command(LCD_RETURNHOME); // set cursor position to zero
 116:Core/Src/lcd.c ****     delayMicroseconds(2000); // this command takes a long time!
 117:Core/Src/lcd.c **** }
 118:Core/Src/lcd.c **** 
 119:Core/Src/lcd.c **** void lcdSetCursor(uint8_t col, uint8_t row)
 120:Core/Src/lcd.c **** {
 121:Core/Src/lcd.c ****     int row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 122:Core/Src/lcd.c ****     if (row > ROWS)
 123:Core/Src/lcd.c ****     {
 124:Core/Src/lcd.c ****         row = ROWS - 1; // we count rows starting w/0
 125:Core/Src/lcd.c ****     }
 126:Core/Src/lcd.c ****     command(LCD_SETDDRAMADDR | (col + row_offsets[row]));
 127:Core/Src/lcd.c **** }
 128:Core/Src/lcd.c **** 
 129:Core/Src/lcd.c **** // Turn the display on/off (quickly)
 130:Core/Src/lcd.c **** void lcdNoDisplay()
 131:Core/Src/lcd.c **** {
 132:Core/Src/lcd.c ****     _displaycontrol &= ~LCD_DISPLAYON;
 133:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 134:Core/Src/lcd.c **** }
 135:Core/Src/lcd.c **** void lcdDisplay()
 136:Core/Src/lcd.c **** {
 137:Core/Src/lcd.c ****     _displaycontrol |= LCD_DISPLAYON;
 138:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 139:Core/Src/lcd.c **** }
 140:Core/Src/lcd.c **** 
 141:Core/Src/lcd.c **** // Turns the underline cursor on/off
 142:Core/Src/lcd.c **** void lcdNoCursor()
 143:Core/Src/lcd.c **** {
 144:Core/Src/lcd.c ****     _displaycontrol &= ~LCD_CURSORON;
 145:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 146:Core/Src/lcd.c **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 4


 147:Core/Src/lcd.c **** void lcdCursor()
 148:Core/Src/lcd.c **** {
 149:Core/Src/lcd.c ****     _displaycontrol |= LCD_CURSORON;
 150:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 151:Core/Src/lcd.c **** }
 152:Core/Src/lcd.c **** 
 153:Core/Src/lcd.c **** // Turn on and off the blinking cursor
 154:Core/Src/lcd.c **** void lcdNoBlink()
 155:Core/Src/lcd.c **** {
 156:Core/Src/lcd.c ****     _displaycontrol &= ~LCD_BLINKON;
 157:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 158:Core/Src/lcd.c **** }
 159:Core/Src/lcd.c **** void lcdBlink()
 160:Core/Src/lcd.c **** {
 161:Core/Src/lcd.c ****     _displaycontrol |= LCD_BLINKON;
 162:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 163:Core/Src/lcd.c **** }
 164:Core/Src/lcd.c **** 
 165:Core/Src/lcd.c **** // These commands scroll the display without changing the RAM
 166:Core/Src/lcd.c **** void lcdScrollDisplayLeft(void)
 167:Core/Src/lcd.c **** {
 168:Core/Src/lcd.c ****     command(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVELEFT);
 169:Core/Src/lcd.c **** }
 170:Core/Src/lcd.c **** void lcdScrollDisplayRight(void)
 171:Core/Src/lcd.c **** {
 172:Core/Src/lcd.c ****     command(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVERIGHT);
 173:Core/Src/lcd.c **** }
 174:Core/Src/lcd.c **** 
 175:Core/Src/lcd.c **** // This is for text that flows Left to Right
 176:Core/Src/lcd.c **** void lcdLeftToRight(void)
 177:Core/Src/lcd.c **** {
 178:Core/Src/lcd.c ****     _displaymode |= LCD_ENTRYLEFT;
 179:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 180:Core/Src/lcd.c **** }
 181:Core/Src/lcd.c **** 
 182:Core/Src/lcd.c **** // This is for text that flows Right to Left
 183:Core/Src/lcd.c **** void lcdRightToLeft(void)
 184:Core/Src/lcd.c **** {
 185:Core/Src/lcd.c ****     _displaymode &= ~LCD_ENTRYLEFT;
 186:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 187:Core/Src/lcd.c **** }
 188:Core/Src/lcd.c **** 
 189:Core/Src/lcd.c **** // This will 'right justify' text from the cursor
 190:Core/Src/lcd.c **** void lcdAutoscroll(void)
 191:Core/Src/lcd.c **** {
 192:Core/Src/lcd.c ****     _displaymode |= LCD_ENTRYSHIFTINCREMENT;
 193:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 194:Core/Src/lcd.c **** }
 195:Core/Src/lcd.c **** 
 196:Core/Src/lcd.c **** // This will 'left justify' text from the cursor
 197:Core/Src/lcd.c **** void lcdNoAutoscroll(void)
 198:Core/Src/lcd.c **** {
 199:Core/Src/lcd.c ****     _displaymode &= ~LCD_ENTRYSHIFTINCREMENT;
 200:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 201:Core/Src/lcd.c **** }
 202:Core/Src/lcd.c **** 
 203:Core/Src/lcd.c **** // Turn the (optional) backlight off/on
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 5


 204:Core/Src/lcd.c **** void lcdNoBacklight(void)
 205:Core/Src/lcd.c **** {
 206:Core/Src/lcd.c ****     _backlightval = LCD_NOBACKLIGHT;
 207:Core/Src/lcd.c ****     expanderWrite(0);
 208:Core/Src/lcd.c **** }
 209:Core/Src/lcd.c **** 
 210:Core/Src/lcd.c **** void lcdBacklight(void)
 211:Core/Src/lcd.c **** {
 212:Core/Src/lcd.c ****     _backlightval = LCD_BACKLIGHT;
 213:Core/Src/lcd.c ****     expanderWrite(0);
 214:Core/Src/lcd.c **** }
 215:Core/Src/lcd.c **** 
 216:Core/Src/lcd.c **** void lcdSendString(char *str)
 217:Core/Src/lcd.c **** {
 218:Core/Src/lcd.c ****     while (*str)
 219:Core/Src/lcd.c ****         write(*str++);
 220:Core/Src/lcd.c **** }
 221:Core/Src/lcd.c **** 
 222:Core/Src/lcd.c **** void lcdSendChar(char c)
 223:Core/Src/lcd.c **** {
 224:Core/Src/lcd.c ****     write(c);
 225:Core/Src/lcd.c **** }
 226:Core/Src/lcd.c **** 
 227:Core/Src/lcd.c **** void lcdIncCursor(void)
 228:Core/Src/lcd.c **** {
 229:Core/Src/lcd.c ****     colCurr++;
 230:Core/Src/lcd.c ****     if (colCurr >= COLS)
 231:Core/Src/lcd.c ****     {
 232:Core/Src/lcd.c ****         colCurr = 0;
 233:Core/Src/lcd.c ****         rowCurr++;
 234:Core/Src/lcd.c ****         if (rowCurr >= ROWS)
 235:Core/Src/lcd.c ****         {
 236:Core/Src/lcd.c ****             rowCurr = 0;
 237:Core/Src/lcd.c ****         }
 238:Core/Src/lcd.c ****     }
 239:Core/Src/lcd.c ****     lcdSetCursor(colCurr, rowCurr);
 240:Core/Src/lcd.c **** }
 241:Core/Src/lcd.c **** 
 242:Core/Src/lcd.c **** void lcdDecCursor(void)
 243:Core/Src/lcd.c **** {
 244:Core/Src/lcd.c ****     colCurr--;
 245:Core/Src/lcd.c ****     if (colCurr < 0U)
 246:Core/Src/lcd.c ****     {
 247:Core/Src/lcd.c ****         colCurr = COLS;
 248:Core/Src/lcd.c ****         rowCurr--;
 249:Core/Src/lcd.c ****         if (rowCurr < 0U)
 250:Core/Src/lcd.c ****         {
 251:Core/Src/lcd.c ****             rowCurr = ROWS;
 252:Core/Src/lcd.c ****         }
 253:Core/Src/lcd.c ****     }
 254:Core/Src/lcd.c ****     lcdSetCursor(colCurr, rowCurr);
 255:Core/Src/lcd.c **** }
 256:Core/Src/lcd.c **** 
 257:Core/Src/lcd.c **** /*********** mid level commands, for sending data/cmds */
 258:Core/Src/lcd.c **** 
 259:Core/Src/lcd.c **** static inline void command(uint8_t value)
 260:Core/Src/lcd.c **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 6


 261:Core/Src/lcd.c ****     send(value, 0);
 262:Core/Src/lcd.c **** }
 263:Core/Src/lcd.c **** 
 264:Core/Src/lcd.c **** static inline size_t write(uint8_t value)
 265:Core/Src/lcd.c **** {
 266:Core/Src/lcd.c ****     send(value, Rs);
 267:Core/Src/lcd.c ****     return 1;
 268:Core/Src/lcd.c **** }
 269:Core/Src/lcd.c **** 
 270:Core/Src/lcd.c **** /************ low level data pushing commands **********/
 271:Core/Src/lcd.c **** 
 272:Core/Src/lcd.c **** // write either command or data
 273:Core/Src/lcd.c **** static void send(uint8_t value, uint8_t mode)
 274:Core/Src/lcd.c **** {
 275:Core/Src/lcd.c ****     uint8_t highnib = value & 0xf0;
 276:Core/Src/lcd.c ****     uint8_t lownib = (value << 4) & 0xf0;
 277:Core/Src/lcd.c ****     write4bits((highnib) | mode);
 278:Core/Src/lcd.c ****     write4bits((lownib) | mode);
 279:Core/Src/lcd.c **** }
 280:Core/Src/lcd.c **** 
 281:Core/Src/lcd.c **** static void write4bits(uint8_t value)
 282:Core/Src/lcd.c **** {
 283:Core/Src/lcd.c ****     expanderWrite(value);
 284:Core/Src/lcd.c ****     pulseEnable(value);
 285:Core/Src/lcd.c **** }
 286:Core/Src/lcd.c **** 
 287:Core/Src/lcd.c **** static void expanderWrite(uint8_t _data)
 288:Core/Src/lcd.c **** {
  27              		.loc 1 288 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 288 1 is_stmt 0 view .LVU1
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 289:Core/Src/lcd.c ****     i2c2CommandDMA((int)(_data) | LCD_BACKLIGHT);
  36              		.loc 1 289 5 is_stmt 1 view .LVU2
  37 0002 40F00800 		orr	r0, r0, #8
  38              	.LVL1:
  39              		.loc 1 289 5 is_stmt 0 view .LVU3
  40 0006 FFF7FEFF 		bl	i2c2CommandDMA
  41              	.LVL2:
 290:Core/Src/lcd.c **** }
  42              		.loc 1 290 1 view .LVU4
  43 000a 08BD     		pop	{r3, pc}
  44              		.cfi_endproc
  45              	.LFE1068:
  47              		.section	.text.pulseEnable,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu softvfp
  54              	pulseEnable:
  55              	.LVL3:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 7


  56              	.LFB1069:
 291:Core/Src/lcd.c **** 
 292:Core/Src/lcd.c **** static void pulseEnable(uint8_t _data)
 293:Core/Src/lcd.c **** {
  57              		.loc 1 293 1 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		.loc 1 293 1 is_stmt 0 view .LVU6
  62 0000 10B5     		push	{r4, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
  66 0002 0446     		mov	r4, r0
 294:Core/Src/lcd.c ****     expanderWrite(_data | En); // En high
  67              		.loc 1 294 5 is_stmt 1 view .LVU7
  68 0004 40F00400 		orr	r0, r0, #4
  69              	.LVL4:
  70              		.loc 1 294 5 is_stmt 0 view .LVU8
  71 0008 FFF7FEFF 		bl	expanderWrite
  72              	.LVL5:
 295:Core/Src/lcd.c ****     delayMicroseconds(1);      // enable pulse must be >450ns
  73              		.loc 1 295 5 is_stmt 1 view .LVU9
  74 000c 0120     		movs	r0, #1
  75 000e FFF7FEFF 		bl	delayMicroseconds
  76              	.LVL6:
 296:Core/Src/lcd.c **** 
 297:Core/Src/lcd.c ****     expanderWrite(_data & ~En); // En low
  77              		.loc 1 297 5 view .LVU10
  78 0012 04F0FB00 		and	r0, r4, #251
  79 0016 FFF7FEFF 		bl	expanderWrite
  80              	.LVL7:
 298:Core/Src/lcd.c ****     delayMicroseconds(50);      // commands need > 37us to settle
  81              		.loc 1 298 5 view .LVU11
  82 001a 3220     		movs	r0, #50
  83 001c FFF7FEFF 		bl	delayMicroseconds
  84              	.LVL8:
 299:Core/Src/lcd.c **** }
  85              		.loc 1 299 1 is_stmt 0 view .LVU12
  86 0020 10BD     		pop	{r4, pc}
  87              		.cfi_endproc
  88              	.LFE1069:
  90              		.section	.text.write4bits,"ax",%progbits
  91              		.align	1
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu softvfp
  97              	write4bits:
  98              	.LVL9:
  99              	.LFB1067:
 282:Core/Src/lcd.c ****     expanderWrite(value);
 100              		.loc 1 282 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 282:Core/Src/lcd.c ****     expanderWrite(value);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 8


 104              		.loc 1 282 1 is_stmt 0 view .LVU14
 105 0000 10B5     		push	{r4, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 4, -8
 108              		.cfi_offset 14, -4
 109 0002 0446     		mov	r4, r0
 283:Core/Src/lcd.c ****     pulseEnable(value);
 110              		.loc 1 283 5 is_stmt 1 view .LVU15
 111 0004 FFF7FEFF 		bl	expanderWrite
 112              	.LVL10:
 284:Core/Src/lcd.c **** }
 113              		.loc 1 284 5 view .LVU16
 114 0008 2046     		mov	r0, r4
 115 000a FFF7FEFF 		bl	pulseEnable
 116              	.LVL11:
 285:Core/Src/lcd.c **** 
 117              		.loc 1 285 1 is_stmt 0 view .LVU17
 118 000e 10BD     		pop	{r4, pc}
 119              		.cfi_endproc
 120              	.LFE1067:
 122              		.section	.text.send,"ax",%progbits
 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 129              	send:
 130              	.LVL12:
 131              	.LFB1066:
 274:Core/Src/lcd.c ****     uint8_t highnib = value & 0xf0;
 132              		.loc 1 274 1 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 274:Core/Src/lcd.c ****     uint8_t highnib = value & 0xf0;
 136              		.loc 1 274 1 is_stmt 0 view .LVU19
 137 0000 38B5     		push	{r3, r4, r5, lr}
 138              		.cfi_def_cfa_offset 16
 139              		.cfi_offset 3, -16
 140              		.cfi_offset 4, -12
 141              		.cfi_offset 5, -8
 142              		.cfi_offset 14, -4
 143 0002 0D46     		mov	r5, r1
 275:Core/Src/lcd.c ****     uint8_t lownib = (value << 4) & 0xf0;
 144              		.loc 1 275 5 is_stmt 1 view .LVU20
 275:Core/Src/lcd.c ****     uint8_t lownib = (value << 4) & 0xf0;
 145              		.loc 1 275 13 is_stmt 0 view .LVU21
 146 0004 00F0F003 		and	r3, r0, #240
 147              	.LVL13:
 276:Core/Src/lcd.c ****     write4bits((highnib) | mode);
 148              		.loc 1 276 5 is_stmt 1 view .LVU22
 276:Core/Src/lcd.c ****     write4bits((highnib) | mode);
 149              		.loc 1 276 29 is_stmt 0 view .LVU23
 150 0008 0401     		lsls	r4, r0, #4
 276:Core/Src/lcd.c ****     write4bits((highnib) | mode);
 151              		.loc 1 276 13 view .LVU24
 152 000a E4B2     		uxtb	r4, r4
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 9


 153              	.LVL14:
 277:Core/Src/lcd.c ****     write4bits((lownib) | mode);
 154              		.loc 1 277 5 is_stmt 1 view .LVU25
 155 000c 43EA0100 		orr	r0, r3, r1
 156              	.LVL15:
 277:Core/Src/lcd.c ****     write4bits((lownib) | mode);
 157              		.loc 1 277 5 is_stmt 0 view .LVU26
 158 0010 FFF7FEFF 		bl	write4bits
 159              	.LVL16:
 278:Core/Src/lcd.c **** }
 160              		.loc 1 278 5 is_stmt 1 view .LVU27
 161 0014 44EA0500 		orr	r0, r4, r5
 162 0018 FFF7FEFF 		bl	write4bits
 163              	.LVL17:
 279:Core/Src/lcd.c **** 
 164              		.loc 1 279 1 is_stmt 0 view .LVU28
 165 001c 38BD     		pop	{r3, r4, r5, pc}
 279:Core/Src/lcd.c **** 
 166              		.loc 1 279 1 view .LVU29
 167              		.cfi_endproc
 168              	.LFE1066:
 170              		.section	.text.lcdClear,"ax",%progbits
 171              		.align	1
 172              		.global	lcdClear
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu softvfp
 178              	lcdClear:
 179              	.LFB1043:
 108:Core/Src/lcd.c ****     command(LCD_CLEARDISPLAY); // clear display, set cursor position to zero
 180              		.loc 1 108 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 08B5     		push	{r3, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
 109:Core/Src/lcd.c ****     delayMicroseconds(2000);   // this command takes a long time!
 188              		.loc 1 109 5 view .LVU31
 189              	.LVL18:
 190              	.LBB41:
 191              	.LBI41:
 259:Core/Src/lcd.c **** {
 192              		.loc 1 259 20 view .LVU32
 193              	.LBB42:
 261:Core/Src/lcd.c **** }
 194              		.loc 1 261 5 view .LVU33
 195 0002 0021     		movs	r1, #0
 196 0004 0120     		movs	r0, #1
 197 0006 FFF7FEFF 		bl	send
 198              	.LVL19:
 261:Core/Src/lcd.c **** }
 199              		.loc 1 261 5 is_stmt 0 view .LVU34
 200              	.LBE42:
 201              	.LBE41:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 10


 110:Core/Src/lcd.c **** }
 202              		.loc 1 110 5 is_stmt 1 view .LVU35
 203 000a 4FF4FA60 		mov	r0, #2000
 204 000e FFF7FEFF 		bl	delayMicroseconds
 205              	.LVL20:
 111:Core/Src/lcd.c **** 
 206              		.loc 1 111 1 is_stmt 0 view .LVU36
 207 0012 08BD     		pop	{r3, pc}
 208              		.cfi_endproc
 209              	.LFE1043:
 211              		.section	.text.lcdHome,"ax",%progbits
 212              		.align	1
 213              		.global	lcdHome
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu softvfp
 219              	lcdHome:
 220              	.LFB1044:
 114:Core/Src/lcd.c ****     command(LCD_RETURNHOME); // set cursor position to zero
 221              		.loc 1 114 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225 0000 08B5     		push	{r3, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 115:Core/Src/lcd.c ****     delayMicroseconds(2000); // this command takes a long time!
 229              		.loc 1 115 5 view .LVU38
 230              	.LVL21:
 231              	.LBB43:
 232              	.LBI43:
 259:Core/Src/lcd.c **** {
 233              		.loc 1 259 20 view .LVU39
 234              	.LBB44:
 261:Core/Src/lcd.c **** }
 235              		.loc 1 261 5 view .LVU40
 236 0002 0021     		movs	r1, #0
 237 0004 0220     		movs	r0, #2
 238 0006 FFF7FEFF 		bl	send
 239              	.LVL22:
 261:Core/Src/lcd.c **** }
 240              		.loc 1 261 5 is_stmt 0 view .LVU41
 241              	.LBE44:
 242              	.LBE43:
 116:Core/Src/lcd.c **** }
 243              		.loc 1 116 5 is_stmt 1 view .LVU42
 244 000a 4FF4FA60 		mov	r0, #2000
 245 000e FFF7FEFF 		bl	delayMicroseconds
 246              	.LVL23:
 117:Core/Src/lcd.c **** 
 247              		.loc 1 117 1 is_stmt 0 view .LVU43
 248 0012 08BD     		pop	{r3, pc}
 249              		.cfi_endproc
 250              	.LFE1044:
 252              		.section	.text.lcdSetCursor,"ax",%progbits
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 11


 253              		.align	1
 254              		.global	lcdSetCursor
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu softvfp
 260              	lcdSetCursor:
 261              	.LVL24:
 262              	.LFB1045:
 120:Core/Src/lcd.c ****     int row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 263              		.loc 1 120 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 16
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 120:Core/Src/lcd.c ****     int row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 267              		.loc 1 120 1 is_stmt 0 view .LVU45
 268 0000 10B5     		push	{r4, lr}
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 4, -8
 271              		.cfi_offset 14, -4
 272 0002 84B0     		sub	sp, sp, #16
 273              		.cfi_def_cfa_offset 24
 274 0004 8446     		mov	ip, r0
 275 0006 8E46     		mov	lr, r1
 121:Core/Src/lcd.c ****     if (row > ROWS)
 276              		.loc 1 121 5 is_stmt 1 view .LVU46
 121:Core/Src/lcd.c ****     if (row > ROWS)
 277              		.loc 1 121 9 is_stmt 0 view .LVU47
 278 0008 0C4B     		ldr	r3, .L17
 279 000a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 280              	.LVL25:
 121:Core/Src/lcd.c ****     if (row > ROWS)
 281              		.loc 1 121 9 view .LVU48
 282 000c 04AC     		add	r4, sp, #16
 283 000e 04E90F00 		stmdb	r4, {r0, r1, r2, r3}
 122:Core/Src/lcd.c ****     {
 284              		.loc 1 122 5 is_stmt 1 view .LVU49
 122:Core/Src/lcd.c ****     {
 285              		.loc 1 122 8 is_stmt 0 view .LVU50
 286 0012 BEF1040F 		cmp	lr, #4
 287 0016 01D9     		bls	.L14
 124:Core/Src/lcd.c ****     }
 288              		.loc 1 124 13 view .LVU51
 289 0018 4FF0030E 		mov	lr, #3
 290              	.L14:
 291              	.LVL26:
 126:Core/Src/lcd.c **** }
 292              		.loc 1 126 5 is_stmt 1 view .LVU52
 126:Core/Src/lcd.c **** }
 293              		.loc 1 126 50 is_stmt 0 view .LVU53
 294 001c 04AB     		add	r3, sp, #16
 295 001e 03EB8E0E 		add	lr, r3, lr, lsl #2
 296              	.LVL27:
 126:Core/Src/lcd.c **** }
 297              		.loc 1 126 50 view .LVU54
 298 0022 5EF8100C 		ldr	r0, [lr, #-16]
 126:Core/Src/lcd.c **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 12


 299              		.loc 1 126 37 view .LVU55
 300 0026 6044     		add	r0, r0, ip
 301 0028 40B2     		sxtb	r0, r0
 126:Core/Src/lcd.c **** }
 302              		.loc 1 126 30 view .LVU56
 303 002a 60F07F00 		orn	r0, r0, #127
 304              	.LVL28:
 305              	.LBB45:
 306              	.LBI45:
 259:Core/Src/lcd.c **** {
 307              		.loc 1 259 20 is_stmt 1 view .LVU57
 308              	.LBB46:
 261:Core/Src/lcd.c **** }
 309              		.loc 1 261 5 view .LVU58
 310 002e 0021     		movs	r1, #0
 311 0030 C0B2     		uxtb	r0, r0
 261:Core/Src/lcd.c **** }
 312              		.loc 1 261 5 is_stmt 0 view .LVU59
 313 0032 FFF7FEFF 		bl	send
 314              	.LVL29:
 261:Core/Src/lcd.c **** }
 315              		.loc 1 261 5 view .LVU60
 316              	.LBE46:
 317              	.LBE45:
 127:Core/Src/lcd.c **** 
 318              		.loc 1 127 1 view .LVU61
 319 0036 04B0     		add	sp, sp, #16
 320              		.cfi_def_cfa_offset 8
 321              		@ sp needed
 322 0038 10BD     		pop	{r4, pc}
 323              	.L18:
 324 003a 00BF     		.align	2
 325              	.L17:
 326 003c 00000000 		.word	.LANCHOR0
 327              		.cfi_endproc
 328              	.LFE1045:
 330              		.section	.text.lcdNoDisplay,"ax",%progbits
 331              		.align	1
 332              		.global	lcdNoDisplay
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu softvfp
 338              	lcdNoDisplay:
 339              	.LFB1046:
 131:Core/Src/lcd.c ****     _displaycontrol &= ~LCD_DISPLAYON;
 340              		.loc 1 131 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 08B5     		push	{r3, lr}
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 3, -8
 347              		.cfi_offset 14, -4
 132:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 348              		.loc 1 132 5 view .LVU63
 132:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 13


 349              		.loc 1 132 21 is_stmt 0 view .LVU64
 350 0002 054B     		ldr	r3, .L21
 351 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 352 0006 00F0FB00 		and	r0, r0, #251
 353 000a 1870     		strb	r0, [r3]
 133:Core/Src/lcd.c **** }
 354              		.loc 1 133 5 is_stmt 1 view .LVU65
 355              	.LVL30:
 356              	.LBB47:
 357              	.LBI47:
 259:Core/Src/lcd.c **** {
 358              		.loc 1 259 20 view .LVU66
 359              	.LBB48:
 261:Core/Src/lcd.c **** }
 360              		.loc 1 261 5 view .LVU67
 361 000c 0021     		movs	r1, #0
 362 000e 40F00800 		orr	r0, r0, #8
 363              	.LVL31:
 261:Core/Src/lcd.c **** }
 364              		.loc 1 261 5 is_stmt 0 view .LVU68
 365 0012 FFF7FEFF 		bl	send
 366              	.LVL32:
 261:Core/Src/lcd.c **** }
 367              		.loc 1 261 5 view .LVU69
 368              	.LBE48:
 369              	.LBE47:
 134:Core/Src/lcd.c **** void lcdDisplay()
 370              		.loc 1 134 1 view .LVU70
 371 0016 08BD     		pop	{r3, pc}
 372              	.L22:
 373              		.align	2
 374              	.L21:
 375 0018 00000000 		.word	.LANCHOR1
 376              		.cfi_endproc
 377              	.LFE1046:
 379              		.section	.text.lcdDisplay,"ax",%progbits
 380              		.align	1
 381              		.global	lcdDisplay
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu softvfp
 387              	lcdDisplay:
 388              	.LFB1047:
 136:Core/Src/lcd.c ****     _displaycontrol |= LCD_DISPLAYON;
 389              		.loc 1 136 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393 0000 08B5     		push	{r3, lr}
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 3, -8
 396              		.cfi_offset 14, -4
 137:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 397              		.loc 1 137 5 view .LVU72
 137:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 398              		.loc 1 137 21 is_stmt 0 view .LVU73
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 14


 399 0002 054B     		ldr	r3, .L25
 400 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 401 0006 40F00400 		orr	r0, r0, #4
 402 000a 1870     		strb	r0, [r3]
 138:Core/Src/lcd.c **** }
 403              		.loc 1 138 5 is_stmt 1 view .LVU74
 404              	.LVL33:
 405              	.LBB49:
 406              	.LBI49:
 259:Core/Src/lcd.c **** {
 407              		.loc 1 259 20 view .LVU75
 408              	.LBB50:
 261:Core/Src/lcd.c **** }
 409              		.loc 1 261 5 view .LVU76
 410 000c 0021     		movs	r1, #0
 411 000e 40F00800 		orr	r0, r0, #8
 412              	.LVL34:
 261:Core/Src/lcd.c **** }
 413              		.loc 1 261 5 is_stmt 0 view .LVU77
 414 0012 FFF7FEFF 		bl	send
 415              	.LVL35:
 261:Core/Src/lcd.c **** }
 416              		.loc 1 261 5 view .LVU78
 417              	.LBE50:
 418              	.LBE49:
 139:Core/Src/lcd.c **** 
 419              		.loc 1 139 1 view .LVU79
 420 0016 08BD     		pop	{r3, pc}
 421              	.L26:
 422              		.align	2
 423              	.L25:
 424 0018 00000000 		.word	.LANCHOR1
 425              		.cfi_endproc
 426              	.LFE1047:
 428              		.section	.text.lcdNoCursor,"ax",%progbits
 429              		.align	1
 430              		.global	lcdNoCursor
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 434              		.fpu softvfp
 436              	lcdNoCursor:
 437              	.LFB1048:
 143:Core/Src/lcd.c ****     _displaycontrol &= ~LCD_CURSORON;
 438              		.loc 1 143 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442 0000 08B5     		push	{r3, lr}
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 3, -8
 445              		.cfi_offset 14, -4
 144:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 446              		.loc 1 144 5 view .LVU81
 144:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 447              		.loc 1 144 21 is_stmt 0 view .LVU82
 448 0002 054B     		ldr	r3, .L29
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 15


 449 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 450 0006 00F0FD00 		and	r0, r0, #253
 451 000a 1870     		strb	r0, [r3]
 145:Core/Src/lcd.c **** }
 452              		.loc 1 145 5 is_stmt 1 view .LVU83
 453              	.LVL36:
 454              	.LBB51:
 455              	.LBI51:
 259:Core/Src/lcd.c **** {
 456              		.loc 1 259 20 view .LVU84
 457              	.LBB52:
 261:Core/Src/lcd.c **** }
 458              		.loc 1 261 5 view .LVU85
 459 000c 0021     		movs	r1, #0
 460 000e 40F00800 		orr	r0, r0, #8
 461              	.LVL37:
 261:Core/Src/lcd.c **** }
 462              		.loc 1 261 5 is_stmt 0 view .LVU86
 463 0012 FFF7FEFF 		bl	send
 464              	.LVL38:
 261:Core/Src/lcd.c **** }
 465              		.loc 1 261 5 view .LVU87
 466              	.LBE52:
 467              	.LBE51:
 146:Core/Src/lcd.c **** void lcdCursor()
 468              		.loc 1 146 1 view .LVU88
 469 0016 08BD     		pop	{r3, pc}
 470              	.L30:
 471              		.align	2
 472              	.L29:
 473 0018 00000000 		.word	.LANCHOR1
 474              		.cfi_endproc
 475              	.LFE1048:
 477              		.section	.text.lcdCursor,"ax",%progbits
 478              		.align	1
 479              		.global	lcdCursor
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu softvfp
 485              	lcdCursor:
 486              	.LFB1049:
 148:Core/Src/lcd.c ****     _displaycontrol |= LCD_CURSORON;
 487              		.loc 1 148 1 is_stmt 1 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491 0000 08B5     		push	{r3, lr}
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 3, -8
 494              		.cfi_offset 14, -4
 149:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 495              		.loc 1 149 5 view .LVU90
 149:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 496              		.loc 1 149 21 is_stmt 0 view .LVU91
 497 0002 054B     		ldr	r3, .L33
 498 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 16


 499 0006 40F00200 		orr	r0, r0, #2
 500 000a 1870     		strb	r0, [r3]
 150:Core/Src/lcd.c **** }
 501              		.loc 1 150 5 is_stmt 1 view .LVU92
 502              	.LVL39:
 503              	.LBB53:
 504              	.LBI53:
 259:Core/Src/lcd.c **** {
 505              		.loc 1 259 20 view .LVU93
 506              	.LBB54:
 261:Core/Src/lcd.c **** }
 507              		.loc 1 261 5 view .LVU94
 508 000c 0021     		movs	r1, #0
 509 000e 40F00800 		orr	r0, r0, #8
 510              	.LVL40:
 261:Core/Src/lcd.c **** }
 511              		.loc 1 261 5 is_stmt 0 view .LVU95
 512 0012 FFF7FEFF 		bl	send
 513              	.LVL41:
 261:Core/Src/lcd.c **** }
 514              		.loc 1 261 5 view .LVU96
 515              	.LBE54:
 516              	.LBE53:
 151:Core/Src/lcd.c **** 
 517              		.loc 1 151 1 view .LVU97
 518 0016 08BD     		pop	{r3, pc}
 519              	.L34:
 520              		.align	2
 521              	.L33:
 522 0018 00000000 		.word	.LANCHOR1
 523              		.cfi_endproc
 524              	.LFE1049:
 526              		.section	.text.lcdNoBlink,"ax",%progbits
 527              		.align	1
 528              		.global	lcdNoBlink
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu softvfp
 534              	lcdNoBlink:
 535              	.LFB1050:
 155:Core/Src/lcd.c ****     _displaycontrol &= ~LCD_BLINKON;
 536              		.loc 1 155 1 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 08B5     		push	{r3, lr}
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 3, -8
 543              		.cfi_offset 14, -4
 156:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 544              		.loc 1 156 5 view .LVU99
 156:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 545              		.loc 1 156 21 is_stmt 0 view .LVU100
 546 0002 054B     		ldr	r3, .L37
 547 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 548 0006 00F0FE00 		and	r0, r0, #254
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 17


 549 000a 1870     		strb	r0, [r3]
 157:Core/Src/lcd.c **** }
 550              		.loc 1 157 5 is_stmt 1 view .LVU101
 551              	.LVL42:
 552              	.LBB55:
 553              	.LBI55:
 259:Core/Src/lcd.c **** {
 554              		.loc 1 259 20 view .LVU102
 555              	.LBB56:
 261:Core/Src/lcd.c **** }
 556              		.loc 1 261 5 view .LVU103
 557 000c 0021     		movs	r1, #0
 558 000e 40F00800 		orr	r0, r0, #8
 559              	.LVL43:
 261:Core/Src/lcd.c **** }
 560              		.loc 1 261 5 is_stmt 0 view .LVU104
 561 0012 FFF7FEFF 		bl	send
 562              	.LVL44:
 261:Core/Src/lcd.c **** }
 563              		.loc 1 261 5 view .LVU105
 564              	.LBE56:
 565              	.LBE55:
 158:Core/Src/lcd.c **** void lcdBlink()
 566              		.loc 1 158 1 view .LVU106
 567 0016 08BD     		pop	{r3, pc}
 568              	.L38:
 569              		.align	2
 570              	.L37:
 571 0018 00000000 		.word	.LANCHOR1
 572              		.cfi_endproc
 573              	.LFE1050:
 575              		.section	.text.lcdBlink,"ax",%progbits
 576              		.align	1
 577              		.global	lcdBlink
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu softvfp
 583              	lcdBlink:
 584              	.LFB1051:
 160:Core/Src/lcd.c ****     _displaycontrol |= LCD_BLINKON;
 585              		.loc 1 160 1 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 08B5     		push	{r3, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 161:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 593              		.loc 1 161 5 view .LVU108
 161:Core/Src/lcd.c ****     command(LCD_DISPLAYCONTROL | _displaycontrol);
 594              		.loc 1 161 21 is_stmt 0 view .LVU109
 595 0002 054B     		ldr	r3, .L41
 596 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 597 0006 40F00100 		orr	r0, r0, #1
 598 000a 1870     		strb	r0, [r3]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 18


 162:Core/Src/lcd.c **** }
 599              		.loc 1 162 5 is_stmt 1 view .LVU110
 600              	.LVL45:
 601              	.LBB57:
 602              	.LBI57:
 259:Core/Src/lcd.c **** {
 603              		.loc 1 259 20 view .LVU111
 604              	.LBB58:
 261:Core/Src/lcd.c **** }
 605              		.loc 1 261 5 view .LVU112
 606 000c 0021     		movs	r1, #0
 607 000e 40F00800 		orr	r0, r0, #8
 608              	.LVL46:
 261:Core/Src/lcd.c **** }
 609              		.loc 1 261 5 is_stmt 0 view .LVU113
 610 0012 FFF7FEFF 		bl	send
 611              	.LVL47:
 261:Core/Src/lcd.c **** }
 612              		.loc 1 261 5 view .LVU114
 613              	.LBE58:
 614              	.LBE57:
 163:Core/Src/lcd.c **** 
 615              		.loc 1 163 1 view .LVU115
 616 0016 08BD     		pop	{r3, pc}
 617              	.L42:
 618              		.align	2
 619              	.L41:
 620 0018 00000000 		.word	.LANCHOR1
 621              		.cfi_endproc
 622              	.LFE1051:
 624              		.section	.text.lcdScrollDisplayLeft,"ax",%progbits
 625              		.align	1
 626              		.global	lcdScrollDisplayLeft
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 630              		.fpu softvfp
 632              	lcdScrollDisplayLeft:
 633              	.LFB1052:
 167:Core/Src/lcd.c ****     command(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVELEFT);
 634              		.loc 1 167 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638 0000 08B5     		push	{r3, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 3, -8
 641              		.cfi_offset 14, -4
 168:Core/Src/lcd.c **** }
 642              		.loc 1 168 5 view .LVU117
 643              	.LVL48:
 644              	.LBB59:
 645              	.LBI59:
 259:Core/Src/lcd.c **** {
 646              		.loc 1 259 20 view .LVU118
 647              	.LBB60:
 261:Core/Src/lcd.c **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 19


 648              		.loc 1 261 5 view .LVU119
 649 0002 0021     		movs	r1, #0
 650 0004 1820     		movs	r0, #24
 651 0006 FFF7FEFF 		bl	send
 652              	.LVL49:
 261:Core/Src/lcd.c **** }
 653              		.loc 1 261 5 is_stmt 0 view .LVU120
 654              	.LBE60:
 655              	.LBE59:
 169:Core/Src/lcd.c **** void lcdScrollDisplayRight(void)
 656              		.loc 1 169 1 view .LVU121
 657 000a 08BD     		pop	{r3, pc}
 658              		.cfi_endproc
 659              	.LFE1052:
 661              		.section	.text.lcdScrollDisplayRight,"ax",%progbits
 662              		.align	1
 663              		.global	lcdScrollDisplayRight
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu softvfp
 669              	lcdScrollDisplayRight:
 670              	.LFB1053:
 171:Core/Src/lcd.c ****     command(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVERIGHT);
 671              		.loc 1 171 1 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 0000 08B5     		push	{r3, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 3, -8
 678              		.cfi_offset 14, -4
 172:Core/Src/lcd.c **** }
 679              		.loc 1 172 5 view .LVU123
 680              	.LVL50:
 681              	.LBB61:
 682              	.LBI61:
 259:Core/Src/lcd.c **** {
 683              		.loc 1 259 20 view .LVU124
 684              	.LBB62:
 261:Core/Src/lcd.c **** }
 685              		.loc 1 261 5 view .LVU125
 686 0002 0021     		movs	r1, #0
 687 0004 1C20     		movs	r0, #28
 688 0006 FFF7FEFF 		bl	send
 689              	.LVL51:
 261:Core/Src/lcd.c **** }
 690              		.loc 1 261 5 is_stmt 0 view .LVU126
 691              	.LBE62:
 692              	.LBE61:
 173:Core/Src/lcd.c **** 
 693              		.loc 1 173 1 view .LVU127
 694 000a 08BD     		pop	{r3, pc}
 695              		.cfi_endproc
 696              	.LFE1053:
 698              		.section	.text.lcdLeftToRight,"ax",%progbits
 699              		.align	1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 20


 700              		.global	lcdLeftToRight
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 704              		.fpu softvfp
 706              	lcdLeftToRight:
 707              	.LFB1054:
 177:Core/Src/lcd.c ****     _displaymode |= LCD_ENTRYLEFT;
 708              		.loc 1 177 1 is_stmt 1 view -0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712 0000 08B5     		push	{r3, lr}
 713              		.cfi_def_cfa_offset 8
 714              		.cfi_offset 3, -8
 715              		.cfi_offset 14, -4
 178:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 716              		.loc 1 178 5 view .LVU129
 178:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 717              		.loc 1 178 18 is_stmt 0 view .LVU130
 718 0002 054B     		ldr	r3, .L49
 719 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 720 0006 40F00200 		orr	r0, r0, #2
 721 000a 1870     		strb	r0, [r3]
 179:Core/Src/lcd.c **** }
 722              		.loc 1 179 5 is_stmt 1 view .LVU131
 723              	.LVL52:
 724              	.LBB63:
 725              	.LBI63:
 259:Core/Src/lcd.c **** {
 726              		.loc 1 259 20 view .LVU132
 727              	.LBB64:
 261:Core/Src/lcd.c **** }
 728              		.loc 1 261 5 view .LVU133
 729 000c 0021     		movs	r1, #0
 730 000e 40F00400 		orr	r0, r0, #4
 731              	.LVL53:
 261:Core/Src/lcd.c **** }
 732              		.loc 1 261 5 is_stmt 0 view .LVU134
 733 0012 FFF7FEFF 		bl	send
 734              	.LVL54:
 261:Core/Src/lcd.c **** }
 735              		.loc 1 261 5 view .LVU135
 736              	.LBE64:
 737              	.LBE63:
 180:Core/Src/lcd.c **** 
 738              		.loc 1 180 1 view .LVU136
 739 0016 08BD     		pop	{r3, pc}
 740              	.L50:
 741              		.align	2
 742              	.L49:
 743 0018 00000000 		.word	.LANCHOR2
 744              		.cfi_endproc
 745              	.LFE1054:
 747              		.section	.text.lcdRightToLeft,"ax",%progbits
 748              		.align	1
 749              		.global	lcdRightToLeft
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 21


 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 753              		.fpu softvfp
 755              	lcdRightToLeft:
 756              	.LFB1055:
 184:Core/Src/lcd.c ****     _displaymode &= ~LCD_ENTRYLEFT;
 757              		.loc 1 184 1 is_stmt 1 view -0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761 0000 08B5     		push	{r3, lr}
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 3, -8
 764              		.cfi_offset 14, -4
 185:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 765              		.loc 1 185 5 view .LVU138
 185:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 766              		.loc 1 185 18 is_stmt 0 view .LVU139
 767 0002 054B     		ldr	r3, .L53
 768 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 769 0006 00F0FD00 		and	r0, r0, #253
 770 000a 1870     		strb	r0, [r3]
 186:Core/Src/lcd.c **** }
 771              		.loc 1 186 5 is_stmt 1 view .LVU140
 772              	.LVL55:
 773              	.LBB65:
 774              	.LBI65:
 259:Core/Src/lcd.c **** {
 775              		.loc 1 259 20 view .LVU141
 776              	.LBB66:
 261:Core/Src/lcd.c **** }
 777              		.loc 1 261 5 view .LVU142
 778 000c 0021     		movs	r1, #0
 779 000e 40F00400 		orr	r0, r0, #4
 780              	.LVL56:
 261:Core/Src/lcd.c **** }
 781              		.loc 1 261 5 is_stmt 0 view .LVU143
 782 0012 FFF7FEFF 		bl	send
 783              	.LVL57:
 261:Core/Src/lcd.c **** }
 784              		.loc 1 261 5 view .LVU144
 785              	.LBE66:
 786              	.LBE65:
 187:Core/Src/lcd.c **** 
 787              		.loc 1 187 1 view .LVU145
 788 0016 08BD     		pop	{r3, pc}
 789              	.L54:
 790              		.align	2
 791              	.L53:
 792 0018 00000000 		.word	.LANCHOR2
 793              		.cfi_endproc
 794              	.LFE1055:
 796              		.section	.text.lcdAutoscroll,"ax",%progbits
 797              		.align	1
 798              		.global	lcdAutoscroll
 799              		.syntax unified
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 22


 800              		.thumb
 801              		.thumb_func
 802              		.fpu softvfp
 804              	lcdAutoscroll:
 805              	.LFB1056:
 191:Core/Src/lcd.c ****     _displaymode |= LCD_ENTRYSHIFTINCREMENT;
 806              		.loc 1 191 1 is_stmt 1 view -0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810 0000 08B5     		push	{r3, lr}
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 3, -8
 813              		.cfi_offset 14, -4
 192:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 814              		.loc 1 192 5 view .LVU147
 192:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 815              		.loc 1 192 18 is_stmt 0 view .LVU148
 816 0002 054B     		ldr	r3, .L57
 817 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 818 0006 40F00100 		orr	r0, r0, #1
 819 000a 1870     		strb	r0, [r3]
 193:Core/Src/lcd.c **** }
 820              		.loc 1 193 5 is_stmt 1 view .LVU149
 821              	.LVL58:
 822              	.LBB67:
 823              	.LBI67:
 259:Core/Src/lcd.c **** {
 824              		.loc 1 259 20 view .LVU150
 825              	.LBB68:
 261:Core/Src/lcd.c **** }
 826              		.loc 1 261 5 view .LVU151
 827 000c 0021     		movs	r1, #0
 828 000e 40F00400 		orr	r0, r0, #4
 829              	.LVL59:
 261:Core/Src/lcd.c **** }
 830              		.loc 1 261 5 is_stmt 0 view .LVU152
 831 0012 FFF7FEFF 		bl	send
 832              	.LVL60:
 261:Core/Src/lcd.c **** }
 833              		.loc 1 261 5 view .LVU153
 834              	.LBE68:
 835              	.LBE67:
 194:Core/Src/lcd.c **** 
 836              		.loc 1 194 1 view .LVU154
 837 0016 08BD     		pop	{r3, pc}
 838              	.L58:
 839              		.align	2
 840              	.L57:
 841 0018 00000000 		.word	.LANCHOR2
 842              		.cfi_endproc
 843              	.LFE1056:
 845              		.section	.text.lcdNoAutoscroll,"ax",%progbits
 846              		.align	1
 847              		.global	lcdNoAutoscroll
 848              		.syntax unified
 849              		.thumb
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 23


 850              		.thumb_func
 851              		.fpu softvfp
 853              	lcdNoAutoscroll:
 854              	.LFB1057:
 198:Core/Src/lcd.c ****     _displaymode &= ~LCD_ENTRYSHIFTINCREMENT;
 855              		.loc 1 198 1 is_stmt 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859 0000 08B5     		push	{r3, lr}
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 3, -8
 862              		.cfi_offset 14, -4
 199:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 863              		.loc 1 199 5 view .LVU156
 199:Core/Src/lcd.c ****     command(LCD_ENTRYMODESET | _displaymode);
 864              		.loc 1 199 18 is_stmt 0 view .LVU157
 865 0002 054B     		ldr	r3, .L61
 866 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 867 0006 00F0FE00 		and	r0, r0, #254
 868 000a 1870     		strb	r0, [r3]
 200:Core/Src/lcd.c **** }
 869              		.loc 1 200 5 is_stmt 1 view .LVU158
 870              	.LVL61:
 871              	.LBB69:
 872              	.LBI69:
 259:Core/Src/lcd.c **** {
 873              		.loc 1 259 20 view .LVU159
 874              	.LBB70:
 261:Core/Src/lcd.c **** }
 875              		.loc 1 261 5 view .LVU160
 876 000c 0021     		movs	r1, #0
 877 000e 40F00400 		orr	r0, r0, #4
 878              	.LVL62:
 261:Core/Src/lcd.c **** }
 879              		.loc 1 261 5 is_stmt 0 view .LVU161
 880 0012 FFF7FEFF 		bl	send
 881              	.LVL63:
 261:Core/Src/lcd.c **** }
 882              		.loc 1 261 5 view .LVU162
 883              	.LBE70:
 884              	.LBE69:
 201:Core/Src/lcd.c **** 
 885              		.loc 1 201 1 view .LVU163
 886 0016 08BD     		pop	{r3, pc}
 887              	.L62:
 888              		.align	2
 889              	.L61:
 890 0018 00000000 		.word	.LANCHOR2
 891              		.cfi_endproc
 892              	.LFE1057:
 894              		.section	.text.lcdNoBacklight,"ax",%progbits
 895              		.align	1
 896              		.global	lcdNoBacklight
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 24


 900              		.fpu softvfp
 902              	lcdNoBacklight:
 903              	.LFB1058:
 205:Core/Src/lcd.c ****     _backlightval = LCD_NOBACKLIGHT;
 904              		.loc 1 205 1 is_stmt 1 view -0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908 0000 08B5     		push	{r3, lr}
 909              		.cfi_def_cfa_offset 8
 910              		.cfi_offset 3, -8
 911              		.cfi_offset 14, -4
 206:Core/Src/lcd.c ****     expanderWrite(0);
 912              		.loc 1 206 5 view .LVU165
 206:Core/Src/lcd.c ****     expanderWrite(0);
 913              		.loc 1 206 19 is_stmt 0 view .LVU166
 914 0002 0020     		movs	r0, #0
 915 0004 024B     		ldr	r3, .L65
 916 0006 1870     		strb	r0, [r3]
 207:Core/Src/lcd.c **** }
 917              		.loc 1 207 5 is_stmt 1 view .LVU167
 918 0008 FFF7FEFF 		bl	expanderWrite
 919              	.LVL64:
 208:Core/Src/lcd.c **** 
 920              		.loc 1 208 1 is_stmt 0 view .LVU168
 921 000c 08BD     		pop	{r3, pc}
 922              	.L66:
 923 000e 00BF     		.align	2
 924              	.L65:
 925 0010 00000000 		.word	.LANCHOR3
 926              		.cfi_endproc
 927              	.LFE1058:
 929              		.section	.text.lcdBacklight,"ax",%progbits
 930              		.align	1
 931              		.global	lcdBacklight
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu softvfp
 937              	lcdBacklight:
 938              	.LFB1059:
 211:Core/Src/lcd.c ****     _backlightval = LCD_BACKLIGHT;
 939              		.loc 1 211 1 is_stmt 1 view -0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943 0000 08B5     		push	{r3, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 3, -8
 946              		.cfi_offset 14, -4
 212:Core/Src/lcd.c ****     expanderWrite(0);
 947              		.loc 1 212 5 view .LVU170
 212:Core/Src/lcd.c ****     expanderWrite(0);
 948              		.loc 1 212 19 is_stmt 0 view .LVU171
 949 0002 034B     		ldr	r3, .L69
 950 0004 0822     		movs	r2, #8
 951 0006 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 25


 213:Core/Src/lcd.c **** }
 952              		.loc 1 213 5 is_stmt 1 view .LVU172
 953 0008 0020     		movs	r0, #0
 954 000a FFF7FEFF 		bl	expanderWrite
 955              	.LVL65:
 214:Core/Src/lcd.c **** 
 956              		.loc 1 214 1 is_stmt 0 view .LVU173
 957 000e 08BD     		pop	{r3, pc}
 958              	.L70:
 959              		.align	2
 960              	.L69:
 961 0010 00000000 		.word	.LANCHOR3
 962              		.cfi_endproc
 963              	.LFE1059:
 965              		.section	.text.lcdInit,"ax",%progbits
 966              		.align	1
 967              		.global	lcdInit
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 971              		.fpu softvfp
 973              	lcdInit:
 974              	.LFB1042:
  34:Core/Src/lcd.c ****     _displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
 975              		.loc 1 34 1 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979 0000 70B5     		push	{r4, r5, r6, lr}
 980              		.cfi_def_cfa_offset 16
 981              		.cfi_offset 4, -16
 982              		.cfi_offset 5, -12
 983              		.cfi_offset 6, -8
 984              		.cfi_offset 14, -4
  35:Core/Src/lcd.c **** 
 985              		.loc 1 35 5 view .LVU175
  35:Core/Src/lcd.c **** 
 986              		.loc 1 35 22 is_stmt 0 view .LVU176
 987 0002 2C4D     		ldr	r5, .L75
 988 0004 0024     		movs	r4, #0
 989 0006 2C70     		strb	r4, [r5]
  37:Core/Src/lcd.c ****     {
 990              		.loc 1 37 5 is_stmt 1 view .LVU177
  39:Core/Src/lcd.c ****     }
 991              		.loc 1 39 9 view .LVU178
  39:Core/Src/lcd.c ****     }
 992              		.loc 1 39 26 is_stmt 0 view .LVU179
 993 0008 0826     		movs	r6, #8
 994 000a 2E70     		strb	r6, [r5]
  45:Core/Src/lcd.c **** 
 995              		.loc 1 45 5 is_stmt 1 view .LVU180
 996 000c 3220     		movs	r0, #50
 997 000e FFF7FEFF 		bl	delay
 998              	.LVL66:
  48:Core/Src/lcd.c ****     delay(1000);
 999              		.loc 1 48 5 view .LVU181
 1000 0012 3046     		mov	r0, r6
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 26


 1001 0014 FFF7FEFF 		bl	expanderWrite
 1002              	.LVL67:
  49:Core/Src/lcd.c **** 
 1003              		.loc 1 49 5 view .LVU182
 1004 0018 4FF47A70 		mov	r0, #1000
 1005 001c FFF7FEFF 		bl	delay
 1006              	.LVL68:
  56:Core/Src/lcd.c ****     delayMicroseconds(4500); // wait min 4.1ms
 1007              		.loc 1 56 5 view .LVU183
 1008 0020 3020     		movs	r0, #48
 1009 0022 FFF7FEFF 		bl	write4bits
 1010              	.LVL69:
  57:Core/Src/lcd.c **** 
 1011              		.loc 1 57 5 view .LVU184
 1012 0026 41F29410 		movw	r0, #4500
 1013 002a FFF7FEFF 		bl	delayMicroseconds
 1014              	.LVL70:
  60:Core/Src/lcd.c ****     delayMicroseconds(4500); // wait min 4.1ms
 1015              		.loc 1 60 5 view .LVU185
 1016 002e 3020     		movs	r0, #48
 1017 0030 FFF7FEFF 		bl	write4bits
 1018              	.LVL71:
  61:Core/Src/lcd.c **** 
 1019              		.loc 1 61 5 view .LVU186
 1020 0034 41F29410 		movw	r0, #4500
 1021 0038 FFF7FEFF 		bl	delayMicroseconds
 1022              	.LVL72:
  64:Core/Src/lcd.c ****     delayMicroseconds(150);
 1023              		.loc 1 64 5 view .LVU187
 1024 003c 3020     		movs	r0, #48
 1025 003e FFF7FEFF 		bl	write4bits
 1026              	.LVL73:
  65:Core/Src/lcd.c **** 
 1027              		.loc 1 65 5 view .LVU188
 1028 0042 9620     		movs	r0, #150
 1029 0044 FFF7FEFF 		bl	delayMicroseconds
 1030              	.LVL74:
  68:Core/Src/lcd.c **** 
 1031              		.loc 1 68 5 view .LVU189
 1032 0048 2020     		movs	r0, #32
 1033 004a FFF7FEFF 		bl	write4bits
 1034              	.LVL75:
  71:Core/Src/lcd.c **** 
 1035              		.loc 1 71 5 view .LVU190
 1036 004e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1037              	.LVL76:
 1038              	.LBB71:
 1039              	.LBI71:
 259:Core/Src/lcd.c **** {
 1040              		.loc 1 259 20 view .LVU191
 1041              	.LBB72:
 261:Core/Src/lcd.c **** }
 1042              		.loc 1 261 5 view .LVU192
 1043 0050 2146     		mov	r1, r4
 1044 0052 40F02000 		orr	r0, r0, #32
 1045              	.LVL77:
 261:Core/Src/lcd.c **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 27


 1046              		.loc 1 261 5 is_stmt 0 view .LVU193
 1047 0056 FFF7FEFF 		bl	send
 1048              	.LVL78:
 261:Core/Src/lcd.c **** }
 1049              		.loc 1 261 5 view .LVU194
 1050              	.LBE72:
 1051              	.LBE71:
  74:Core/Src/lcd.c ****     lcdDisplay();
 1052              		.loc 1 74 5 is_stmt 1 view .LVU195
  74:Core/Src/lcd.c ****     lcdDisplay();
 1053              		.loc 1 74 21 is_stmt 0 view .LVU196
 1054 005a 174B     		ldr	r3, .L75+4
 1055 005c 0722     		movs	r2, #7
 1056 005e 1A70     		strb	r2, [r3]
  75:Core/Src/lcd.c **** 
 1057              		.loc 1 75 5 is_stmt 1 view .LVU197
 1058 0060 FFF7FEFF 		bl	lcdDisplay
 1059              	.LVL79:
  78:Core/Src/lcd.c **** 
 1060              		.loc 1 78 5 view .LVU198
 1061 0064 FFF7FEFF 		bl	lcdClear
 1062              	.LVL80:
  81:Core/Src/lcd.c **** 
 1063              		.loc 1 81 5 view .LVU199
  81:Core/Src/lcd.c **** 
 1064              		.loc 1 81 18 is_stmt 0 view .LVU200
 1065 0068 144B     		ldr	r3, .L75+8
 1066 006a 0222     		movs	r2, #2
 1067 006c 1A70     		strb	r2, [r3]
  84:Core/Src/lcd.c **** 
 1068              		.loc 1 84 5 is_stmt 1 view .LVU201
 1069              	.LVL81:
 1070              	.LBB73:
 1071              	.LBI73:
 259:Core/Src/lcd.c **** {
 1072              		.loc 1 259 20 view .LVU202
 1073              	.LBB74:
 261:Core/Src/lcd.c **** }
 1074              		.loc 1 261 5 view .LVU203
 1075 006e 2146     		mov	r1, r4
 1076 0070 0620     		movs	r0, #6
 1077 0072 FFF7FEFF 		bl	send
 1078              	.LVL82:
 261:Core/Src/lcd.c **** }
 1079              		.loc 1 261 5 is_stmt 0 view .LVU204
 1080              	.LBE74:
 1081              	.LBE73:
  86:Core/Src/lcd.c **** 
 1082              		.loc 1 86 5 is_stmt 1 view .LVU205
 1083 0076 FFF7FEFF 		bl	lcdHome
 1084              	.LVL83:
  88:Core/Src/lcd.c ****     {
 1085              		.loc 1 88 5 view .LVU206
 1086              	.LBB75:
  88:Core/Src/lcd.c ****     {
 1087              		.loc 1 88 10 view .LVU207
  88:Core/Src/lcd.c ****     {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 28


 1088              		.loc 1 88 5 is_stmt 0 view .LVU208
 1089 007a 0AE0     		b	.L72
 1090              	.LVL84:
 1091              	.L73:
  90:Core/Src/lcd.c ****         delay(250);
 1092              		.loc 1 90 9 is_stmt 1 discriminator 3 view .LVU209
 1093 007c FFF7FEFF 		bl	lcdBacklight
 1094              	.LVL85:
  91:Core/Src/lcd.c ****         lcdNoBacklight();
 1095              		.loc 1 91 9 discriminator 3 view .LVU210
 1096 0080 FA20     		movs	r0, #250
 1097 0082 FFF7FEFF 		bl	delay
 1098              	.LVL86:
  92:Core/Src/lcd.c ****         delay(250);
 1099              		.loc 1 92 9 discriminator 3 view .LVU211
 1100 0086 FFF7FEFF 		bl	lcdNoBacklight
 1101              	.LVL87:
  93:Core/Src/lcd.c ****     }
 1102              		.loc 1 93 9 discriminator 3 view .LVU212
 1103 008a FA20     		movs	r0, #250
 1104 008c FFF7FEFF 		bl	delay
 1105              	.LVL88:
  88:Core/Src/lcd.c ****     {
 1106              		.loc 1 88 28 discriminator 3 view .LVU213
  88:Core/Src/lcd.c ****     {
 1107              		.loc 1 88 29 is_stmt 0 discriminator 3 view .LVU214
 1108 0090 0134     		adds	r4, r4, #1
 1109              	.LVL89:
 1110              	.L72:
  88:Core/Src/lcd.c ****     {
 1111              		.loc 1 88 21 is_stmt 1 discriminator 1 view .LVU215
  88:Core/Src/lcd.c ****     {
 1112              		.loc 1 88 5 is_stmt 0 discriminator 1 view .LVU216
 1113 0092 022C     		cmp	r4, #2
 1114 0094 F2DD     		ble	.L73
 1115              	.LBE75:
  95:Core/Src/lcd.c **** 
 1116              		.loc 1 95 5 is_stmt 1 view .LVU217
 1117 0096 FFF7FEFF 		bl	lcdBacklight
 1118              	.LVL90:
  97:Core/Src/lcd.c **** 
 1119              		.loc 1 97 5 view .LVU218
 1120 009a FFF7FEFF 		bl	lcdNoAutoscroll
 1121              	.LVL91:
  99:Core/Src/lcd.c **** 
 1122              		.loc 1 99 5 view .LVU219
 1123 009e FFF7FEFF 		bl	lcdBacklight
 1124              	.LVL92:
 101:Core/Src/lcd.c ****     colCurr = 0;
 1125              		.loc 1 101 5 view .LVU220
 101:Core/Src/lcd.c ****     colCurr = 0;
 1126              		.loc 1 101 13 is_stmt 0 view .LVU221
 1127 00a2 0020     		movs	r0, #0
 1128 00a4 064B     		ldr	r3, .L75+12
 1129 00a6 1870     		strb	r0, [r3]
 102:Core/Src/lcd.c ****     lcdSetCursor(colCurr, rowCurr);
 1130              		.loc 1 102 5 is_stmt 1 view .LVU222
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 29


 102:Core/Src/lcd.c ****     lcdSetCursor(colCurr, rowCurr);
 1131              		.loc 1 102 13 is_stmt 0 view .LVU223
 1132 00a8 064B     		ldr	r3, .L75+16
 1133 00aa 1870     		strb	r0, [r3]
 103:Core/Src/lcd.c **** }
 1134              		.loc 1 103 5 is_stmt 1 view .LVU224
 1135 00ac 0146     		mov	r1, r0
 1136 00ae FFF7FEFF 		bl	lcdSetCursor
 1137              	.LVL93:
 104:Core/Src/lcd.c **** 
 1138              		.loc 1 104 1 is_stmt 0 view .LVU225
 1139 00b2 70BD     		pop	{r4, r5, r6, pc}
 1140              	.LVL94:
 1141              	.L76:
 104:Core/Src/lcd.c **** 
 1142              		.loc 1 104 1 view .LVU226
 1143              		.align	2
 1144              	.L75:
 1145 00b4 00000000 		.word	.LANCHOR4
 1146 00b8 00000000 		.word	.LANCHOR1
 1147 00bc 00000000 		.word	.LANCHOR2
 1148 00c0 00000000 		.word	.LANCHOR5
 1149 00c4 00000000 		.word	.LANCHOR6
 1150              		.cfi_endproc
 1151              	.LFE1042:
 1153              		.section	.text.lcdSendString,"ax",%progbits
 1154              		.align	1
 1155              		.global	lcdSendString
 1156              		.syntax unified
 1157              		.thumb
 1158              		.thumb_func
 1159              		.fpu softvfp
 1161              	lcdSendString:
 1162              	.LVL95:
 1163              	.LFB1060:
 217:Core/Src/lcd.c ****     while (*str)
 1164              		.loc 1 217 1 is_stmt 1 view -0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 217:Core/Src/lcd.c ****     while (*str)
 1168              		.loc 1 217 1 is_stmt 0 view .LVU228
 1169 0000 10B5     		push	{r4, lr}
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 4, -8
 1172              		.cfi_offset 14, -4
 1173 0002 0446     		mov	r4, r0
 218:Core/Src/lcd.c ****         write(*str++);
 1174              		.loc 1 218 5 is_stmt 1 view .LVU229
 218:Core/Src/lcd.c ****         write(*str++);
 1175              		.loc 1 218 11 is_stmt 0 view .LVU230
 1176 0004 03E0     		b	.L78
 1177              	.LVL96:
 1178              	.L79:
 219:Core/Src/lcd.c **** }
 1179              		.loc 1 219 9 is_stmt 1 view .LVU231
 219:Core/Src/lcd.c **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 30


 1180              		.loc 1 219 19 is_stmt 0 view .LVU232
 1181 0006 0134     		adds	r4, r4, #1
 1182              	.LVL97:
 1183              	.LBB76:
 1184              	.LBI76:
 264:Core/Src/lcd.c **** {
 1185              		.loc 1 264 22 is_stmt 1 view .LVU233
 1186              	.LBB77:
 266:Core/Src/lcd.c ****     return 1;
 1187              		.loc 1 266 5 view .LVU234
 1188 0008 0121     		movs	r1, #1
 1189 000a FFF7FEFF 		bl	send
 1190              	.LVL98:
 267:Core/Src/lcd.c **** }
 1191              		.loc 1 267 5 view .LVU235
 1192              	.L78:
 267:Core/Src/lcd.c **** }
 1193              		.loc 1 267 5 is_stmt 0 view .LVU236
 1194              	.LBE77:
 1195              	.LBE76:
 218:Core/Src/lcd.c ****         write(*str++);
 1196              		.loc 1 218 11 is_stmt 1 view .LVU237
 218:Core/Src/lcd.c ****         write(*str++);
 1197              		.loc 1 218 12 is_stmt 0 view .LVU238
 1198 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 218:Core/Src/lcd.c ****         write(*str++);
 1199              		.loc 1 218 11 view .LVU239
 1200 0010 0028     		cmp	r0, #0
 1201 0012 F8D1     		bne	.L79
 220:Core/Src/lcd.c **** 
 1202              		.loc 1 220 1 view .LVU240
 1203 0014 10BD     		pop	{r4, pc}
 220:Core/Src/lcd.c **** 
 1204              		.loc 1 220 1 view .LVU241
 1205              		.cfi_endproc
 1206              	.LFE1060:
 1208              		.section	.text.lcdSendChar,"ax",%progbits
 1209              		.align	1
 1210              		.global	lcdSendChar
 1211              		.syntax unified
 1212              		.thumb
 1213              		.thumb_func
 1214              		.fpu softvfp
 1216              	lcdSendChar:
 1217              	.LVL99:
 1218              	.LFB1061:
 223:Core/Src/lcd.c ****     write(c);
 1219              		.loc 1 223 1 is_stmt 1 view -0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 223:Core/Src/lcd.c ****     write(c);
 1223              		.loc 1 223 1 is_stmt 0 view .LVU243
 1224 0000 08B5     		push	{r3, lr}
 1225              		.cfi_def_cfa_offset 8
 1226              		.cfi_offset 3, -8
 1227              		.cfi_offset 14, -4
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 31


 224:Core/Src/lcd.c **** }
 1228              		.loc 1 224 5 is_stmt 1 view .LVU244
 1229              	.LVL100:
 1230              	.LBB78:
 1231              	.LBI78:
 264:Core/Src/lcd.c **** {
 1232              		.loc 1 264 22 view .LVU245
 1233              	.LBB79:
 266:Core/Src/lcd.c ****     return 1;
 1234              		.loc 1 266 5 view .LVU246
 1235 0002 0121     		movs	r1, #1
 1236 0004 FFF7FEFF 		bl	send
 1237              	.LVL101:
 267:Core/Src/lcd.c **** }
 1238              		.loc 1 267 5 view .LVU247
 267:Core/Src/lcd.c **** }
 1239              		.loc 1 267 5 is_stmt 0 view .LVU248
 1240              	.LBE79:
 1241              	.LBE78:
 225:Core/Src/lcd.c **** 
 1242              		.loc 1 225 1 view .LVU249
 1243 0008 08BD     		pop	{r3, pc}
 1244              		.cfi_endproc
 1245              	.LFE1061:
 1247              		.section	.text.lcdIncCursor,"ax",%progbits
 1248              		.align	1
 1249              		.global	lcdIncCursor
 1250              		.syntax unified
 1251              		.thumb
 1252              		.thumb_func
 1253              		.fpu softvfp
 1255              	lcdIncCursor:
 1256              	.LFB1062:
 228:Core/Src/lcd.c ****     colCurr++;
 1257              		.loc 1 228 1 is_stmt 1 view -0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261 0000 08B5     		push	{r3, lr}
 1262              		.cfi_def_cfa_offset 8
 1263              		.cfi_offset 3, -8
 1264              		.cfi_offset 14, -4
 229:Core/Src/lcd.c ****     if (colCurr >= COLS)
 1265              		.loc 1 229 5 view .LVU251
 229:Core/Src/lcd.c ****     if (colCurr >= COLS)
 1266              		.loc 1 229 12 is_stmt 0 view .LVU252
 1267 0002 0D4A     		ldr	r2, .L86
 1268 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1269 0006 0133     		adds	r3, r3, #1
 1270 0008 DBB2     		uxtb	r3, r3
 1271 000a 1370     		strb	r3, [r2]
 230:Core/Src/lcd.c ****     {
 1272              		.loc 1 230 5 is_stmt 1 view .LVU253
 230:Core/Src/lcd.c ****     {
 1273              		.loc 1 230 8 is_stmt 0 view .LVU254
 1274 000c 132B     		cmp	r3, #19
 1275 000e 0CD9     		bls	.L84
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 32


 232:Core/Src/lcd.c ****         rowCurr++;
 1276              		.loc 1 232 9 is_stmt 1 view .LVU255
 232:Core/Src/lcd.c ****         rowCurr++;
 1277              		.loc 1 232 17 is_stmt 0 view .LVU256
 1278 0010 1346     		mov	r3, r2
 1279 0012 0022     		movs	r2, #0
 1280 0014 1A70     		strb	r2, [r3]
 233:Core/Src/lcd.c ****         if (rowCurr >= ROWS)
 1281              		.loc 1 233 9 is_stmt 1 view .LVU257
 233:Core/Src/lcd.c ****         if (rowCurr >= ROWS)
 1282              		.loc 1 233 16 is_stmt 0 view .LVU258
 1283 0016 094A     		ldr	r2, .L86+4
 1284 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1285 001a 0133     		adds	r3, r3, #1
 1286 001c DBB2     		uxtb	r3, r3
 1287 001e 1370     		strb	r3, [r2]
 234:Core/Src/lcd.c ****         {
 1288              		.loc 1 234 9 is_stmt 1 view .LVU259
 234:Core/Src/lcd.c ****         {
 1289              		.loc 1 234 12 is_stmt 0 view .LVU260
 1290 0020 032B     		cmp	r3, #3
 1291 0022 02D9     		bls	.L84
 236:Core/Src/lcd.c ****         }
 1292              		.loc 1 236 13 is_stmt 1 view .LVU261
 236:Core/Src/lcd.c ****         }
 1293              		.loc 1 236 21 is_stmt 0 view .LVU262
 1294 0024 1346     		mov	r3, r2
 1295 0026 0022     		movs	r2, #0
 1296 0028 1A70     		strb	r2, [r3]
 1297              	.L84:
 239:Core/Src/lcd.c **** }
 1298              		.loc 1 239 5 is_stmt 1 view .LVU263
 1299 002a 044B     		ldr	r3, .L86+4
 1300 002c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1301 002e 024B     		ldr	r3, .L86
 1302 0030 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1303 0032 FFF7FEFF 		bl	lcdSetCursor
 1304              	.LVL102:
 240:Core/Src/lcd.c **** 
 1305              		.loc 1 240 1 is_stmt 0 view .LVU264
 1306 0036 08BD     		pop	{r3, pc}
 1307              	.L87:
 1308              		.align	2
 1309              	.L86:
 1310 0038 00000000 		.word	.LANCHOR6
 1311 003c 00000000 		.word	.LANCHOR5
 1312              		.cfi_endproc
 1313              	.LFE1062:
 1315              		.section	.text.lcdDecCursor,"ax",%progbits
 1316              		.align	1
 1317              		.global	lcdDecCursor
 1318              		.syntax unified
 1319              		.thumb
 1320              		.thumb_func
 1321              		.fpu softvfp
 1323              	lcdDecCursor:
 1324              	.LFB1063:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 33


 243:Core/Src/lcd.c ****     colCurr--;
 1325              		.loc 1 243 1 is_stmt 1 view -0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 1329 0000 08B5     		push	{r3, lr}
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 3, -8
 1332              		.cfi_offset 14, -4
 244:Core/Src/lcd.c ****     if (colCurr < 0U)
 1333              		.loc 1 244 5 view .LVU266
 244:Core/Src/lcd.c ****     if (colCurr < 0U)
 1334              		.loc 1 244 12 is_stmt 0 view .LVU267
 1335 0002 054B     		ldr	r3, .L90
 1336 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1337 0006 0138     		subs	r0, r0, #1
 1338 0008 C0B2     		uxtb	r0, r0
 1339 000a 1870     		strb	r0, [r3]
 245:Core/Src/lcd.c ****     {
 1340              		.loc 1 245 5 is_stmt 1 view .LVU268
 254:Core/Src/lcd.c **** }
 1341              		.loc 1 254 5 view .LVU269
 1342 000c 034B     		ldr	r3, .L90+4
 1343 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1344 0010 FFF7FEFF 		bl	lcdSetCursor
 1345              	.LVL103:
 255:Core/Src/lcd.c **** 
 1346              		.loc 1 255 1 is_stmt 0 view .LVU270
 1347 0014 08BD     		pop	{r3, pc}
 1348              	.L91:
 1349 0016 00BF     		.align	2
 1350              	.L90:
 1351 0018 00000000 		.word	.LANCHOR6
 1352 001c 00000000 		.word	.LANCHOR5
 1353              		.cfi_endproc
 1354              	.LFE1063:
 1356              		.global	_backlightval
 1357              		.global	_charsize
 1358              		.global	_rows
 1359              		.global	_cols
 1360              		.global	_displaymode
 1361              		.global	_displaycontrol
 1362              		.global	_displayfunction
 1363              		.global	_addr
 1364              		.global	colCurr
 1365              		.global	rowCurr
 1366              		.section	.rodata
 1367              		.align	2
 1368              		.set	.LANCHOR0,. + 0
 1369              	.LC0:
 1370 0000 00000000 		.word	0
 1371 0004 40000000 		.word	64
 1372 0008 14000000 		.word	20
 1373 000c 54000000 		.word	84
 1374              		.section	.bss._addr,"aw",%nobits
 1377              	_addr:
 1378 0000 00       		.space	1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 34


 1379              		.section	.bss._backlightval,"aw",%nobits
 1380              		.set	.LANCHOR3,. + 0
 1383              	_backlightval:
 1384 0000 00       		.space	1
 1385              		.section	.bss._charsize,"aw",%nobits
 1388              	_charsize:
 1389 0000 00       		.space	1
 1390              		.section	.bss._displaycontrol,"aw",%nobits
 1391              		.set	.LANCHOR1,. + 0
 1394              	_displaycontrol:
 1395 0000 00       		.space	1
 1396              		.section	.bss._displayfunction,"aw",%nobits
 1397              		.set	.LANCHOR4,. + 0
 1400              	_displayfunction:
 1401 0000 00       		.space	1
 1402              		.section	.bss._displaymode,"aw",%nobits
 1403              		.set	.LANCHOR2,. + 0
 1406              	_displaymode:
 1407 0000 00       		.space	1
 1408              		.section	.bss.colCurr,"aw",%nobits
 1409              		.set	.LANCHOR6,. + 0
 1412              	colCurr:
 1413 0000 00       		.space	1
 1414              		.section	.bss.rowCurr,"aw",%nobits
 1415              		.set	.LANCHOR5,. + 0
 1418              	rowCurr:
 1419 0000 00       		.space	1
 1420              		.section	.data._cols,"aw"
 1423              	_cols:
 1424 0000 14       		.byte	20
 1425              		.section	.data._rows,"aw"
 1428              	_rows:
 1429 0000 04       		.byte	4
 1430              		.text
 1431              	.Letext0:
 1432              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 1433              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 1434              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/incl
 1435              		.file 5 "Core/Inc/lcd.h"
 1436              		.file 6 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 1437              		.file 7 "Core/Inc/drv_system.h"
 1438              		.file 8 "Core/Inc/i2c.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lcd.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:16     .text.expanderWrite:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:23     .text.expanderWrite:0000000000000000 expanderWrite
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:48     .text.pulseEnable:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:54     .text.pulseEnable:0000000000000000 pulseEnable
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:91     .text.write4bits:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:97     .text.write4bits:0000000000000000 write4bits
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:123    .text.send:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:129    .text.send:0000000000000000 send
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:171    .text.lcdClear:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:178    .text.lcdClear:0000000000000000 lcdClear
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:212    .text.lcdHome:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:219    .text.lcdHome:0000000000000000 lcdHome
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:253    .text.lcdSetCursor:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:260    .text.lcdSetCursor:0000000000000000 lcdSetCursor
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:326    .text.lcdSetCursor:000000000000003c $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:331    .text.lcdNoDisplay:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:338    .text.lcdNoDisplay:0000000000000000 lcdNoDisplay
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:375    .text.lcdNoDisplay:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:380    .text.lcdDisplay:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:387    .text.lcdDisplay:0000000000000000 lcdDisplay
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:424    .text.lcdDisplay:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:429    .text.lcdNoCursor:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:436    .text.lcdNoCursor:0000000000000000 lcdNoCursor
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:473    .text.lcdNoCursor:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:478    .text.lcdCursor:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:485    .text.lcdCursor:0000000000000000 lcdCursor
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:522    .text.lcdCursor:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:527    .text.lcdNoBlink:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:534    .text.lcdNoBlink:0000000000000000 lcdNoBlink
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:571    .text.lcdNoBlink:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:576    .text.lcdBlink:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:583    .text.lcdBlink:0000000000000000 lcdBlink
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:620    .text.lcdBlink:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:625    .text.lcdScrollDisplayLeft:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:632    .text.lcdScrollDisplayLeft:0000000000000000 lcdScrollDisplayLeft
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:662    .text.lcdScrollDisplayRight:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:669    .text.lcdScrollDisplayRight:0000000000000000 lcdScrollDisplayRight
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:699    .text.lcdLeftToRight:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:706    .text.lcdLeftToRight:0000000000000000 lcdLeftToRight
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:743    .text.lcdLeftToRight:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:748    .text.lcdRightToLeft:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:755    .text.lcdRightToLeft:0000000000000000 lcdRightToLeft
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:792    .text.lcdRightToLeft:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:797    .text.lcdAutoscroll:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:804    .text.lcdAutoscroll:0000000000000000 lcdAutoscroll
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:841    .text.lcdAutoscroll:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:846    .text.lcdNoAutoscroll:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:853    .text.lcdNoAutoscroll:0000000000000000 lcdNoAutoscroll
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:890    .text.lcdNoAutoscroll:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:895    .text.lcdNoBacklight:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:902    .text.lcdNoBacklight:0000000000000000 lcdNoBacklight
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:925    .text.lcdNoBacklight:0000000000000010 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:930    .text.lcdBacklight:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:937    .text.lcdBacklight:0000000000000000 lcdBacklight
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:961    .text.lcdBacklight:0000000000000010 $d
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s 			page 36


/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:966    .text.lcdInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:973    .text.lcdInit:0000000000000000 lcdInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1145   .text.lcdInit:00000000000000b4 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1154   .text.lcdSendString:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1161   .text.lcdSendString:0000000000000000 lcdSendString
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1209   .text.lcdSendChar:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1216   .text.lcdSendChar:0000000000000000 lcdSendChar
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1248   .text.lcdIncCursor:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1255   .text.lcdIncCursor:0000000000000000 lcdIncCursor
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1310   .text.lcdIncCursor:0000000000000038 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1316   .text.lcdDecCursor:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1323   .text.lcdDecCursor:0000000000000000 lcdDecCursor
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1351   .text.lcdDecCursor:0000000000000018 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1383   .bss._backlightval:0000000000000000 _backlightval
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1388   .bss._charsize:0000000000000000 _charsize
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1428   .data._rows:0000000000000000 _rows
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1423   .data._cols:0000000000000000 _cols
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1406   .bss._displaymode:0000000000000000 _displaymode
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1394   .bss._displaycontrol:0000000000000000 _displaycontrol
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1400   .bss._displayfunction:0000000000000000 _displayfunction
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1377   .bss._addr:0000000000000000 _addr
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1412   .bss.colCurr:0000000000000000 colCurr
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1418   .bss.rowCurr:0000000000000000 rowCurr
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1367   .rodata:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1378   .bss._addr:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1384   .bss._backlightval:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1389   .bss._charsize:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1395   .bss._displaycontrol:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1401   .bss._displayfunction:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1407   .bss._displaymode:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1413   .bss.colCurr:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccnBisRO.s:1419   .bss.rowCurr:0000000000000000 $d

UNDEFINED SYMBOLS
i2c2CommandDMA
delayMicroseconds
delay
